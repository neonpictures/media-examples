# Norsk Media example: 19_rtmp_mosaic
#
# Create an RTMP server and dynamically mosaic any inbound streams into a tiled mosaic, publishing the result as Transport Stream-based HLS
#

version: "3"

services:
  norsk:
    container_name: norsk-server
    image: norskvideo/norsk:v1.0.334-main
    network_mode: host
    volumes:
      - ${LICENSE_FILE}:/mnt/license.json:ro
      - ${LOG_ROOT}:/var/log/norsk
    command: --license-file /mnt/license.json 
    shm_size: '2gb'
    # cpuset: "0-15"
  example:
    container_name: norsk-example-app
    build:
      context: examples
      dockerfile: Dockerfile
      network: host # note this is for build only, not at runtime. Without it npm install can fail on some systems
    network_mode: host
    environment:
      - PUBLIC_URL_PREFIX=${PUBLIC_URL_PREFIX}
      - DEBUG_URL_PREFIX=${DEBUG_URL_PREFIX}
      - CLIENT_HOST_EXTERNAL=${CLIENT_HOST}
      - CLIENT_HOST_INTERNAL=127.0.0.1
    depends_on:
      norsk:
        condition: service_healthy
    command: node -e 'require("./lib/src/19_rtmp_mosaic").main()'
  # [Start of source]
  source_0:
    container_name: norsk-source_0
    image: datarhei/ffmpeg
    network_mode: host
    entrypoint: ["/bin/sh","-c"]
    volumes:
      - ./data:/tmp/data:ro
    command:
    - |
        sleep 1
        ffmpeg -v error -re -stream_loop -1 -i data/InkDrop.ts -vcodec copy -acodec copy -f flv 'rtmp://127.0.0.1:1935/mosaic/source1'
    depends_on:
      - example
  # [End of source]
  # [Start of source]
  source_1:
    container_name: norsk-source_1
    image: datarhei/ffmpeg
    network_mode: host
    entrypoint: ["/bin/sh","-c"]
    volumes:
      - ./data:/tmp/data:ro
    command:
    - |
        sleep 1
        ffmpeg -v error -re -stream_loop -1 -i data/Weaving.ts -vcodec copy -acodec copy -f flv 'rtmp://127.0.0.1:1935/mosaic/source2'
    depends_on:
      - example
  # [End of source]
