# Norsk Media example: 15_compose
#
# Compose multiple sources into a single output and vary how they are arranged
#

version: "3.5"

networks:
  norskNetwork:
    name: norsk-nw

services:
  norsk:
    container_name: norsk-server
    image: norskvideo/norsk:v1.0.332-main
    ports:
      - 1935:1935/tcp # For RTMP sources
      - 5001:5001/udp # For SRT sources
      - 5002:5002/udp # For SRT sources
      - 6790:6790/tcp # GRPC interface
      - 6791:6791/tcp # Debugging endpoints, including the workflow visualizer, logs, and docs
      - 8080:8080/tcp # Public endpoints for HLS/DASH and WebRTC players
    volumes:
      - ${LICENSE_FILE}:/mnt/license.json:ro
      - ${LOG_ROOT}:/var/log/norsk
      - ./docker-compose/metrics/docker-network/output.conf:/mnt/output.conf
    command: --license-file /mnt/license.json  --log-config-file /mnt/output.conf
    shm_size: '2gb'
    # cpuset: "0-15"
    networks:
      - norskNetwork
  example:
    container_name: norsk-example-app
    ports:
      - 3000:3000/tcp # Some sources have an internal web UI, published on 3000
    build:
      context: examples
      dockerfile: Dockerfile
      network: host # note this is for build only, not at runtime. Without it npm install can fail on some systems
    environment:
      - NORSK_HOST=norsk
      - PUBLIC_URL_PREFIX=${PUBLIC_URL_PREFIX}
      - DEBUG_URL_PREFIX=${DEBUG_URL_PREFIX}
    depends_on:
      norsk:
        condition: service_healthy
    command: node -e 'require("./lib/src/15_compose").main()'
    networks:
      - norskNetwork
  # [Start of source]
  source_0:
    container_name: norsk-source_0
    image: datarhei/ffmpeg
    entrypoint: ["/bin/sh","-c"]
    volumes:
      - ./data:/tmp/data:ro
    command:
    - |
        sleep 1
        ffmpeg -v error -re -f lavfi -i "sine=frequency=220:sample_rate=48000" -loop 1 -i data/test-src-still.png -vf drawtext=fontfile=/tmp/data/Arial.ttf:text="%{frame_num}":start_number=1:x=980:y=330:fontcolor=black:fontsize=40:box=1:boxcolor=white:boxborderw=5,scale=1280:720 -vcodec h264 -b:v 150000 -b:a 20000 -aspect 1280:720 -x264opts "keyint=25:min-keyint=25:no-scenecut:bframes=0" -bluray-compat true -tune stillimage -preset fast -pix_fmt yuv420p -acodec aac -metadata language=en -f mpegts -flush_packets 0 'srt://norsk:5001'
    depends_on:
      - example
    networks:
      - norskNetwork
  # [End of source]
  # [Start of source]
  source_1:
    container_name: norsk-source_1
    image: datarhei/ffmpeg
    entrypoint: ["/bin/sh","-c"]
    volumes:
      - ./data:/tmp/data:ro
    command:
    - |
        sleep 1
        ffmpeg -v error -re -f lavfi -i "sine=frequency=220:sample_rate=48000" -loop 1 -i data/test-src-still.png -vf drawtext=fontfile=/tmp/data/Arial.ttf:text="%{frame_num}":start_number=1:x=980:y=330:fontcolor=black:fontsize=40:box=1:boxcolor=white:boxborderw=5,scale=1280:720 -vcodec h264 -b:v 150000 -b:a 20000 -aspect 1280:720 -x264opts "keyint=25:min-keyint=25:no-scenecut:bframes=0" -bluray-compat true -tune stillimage -preset fast -pix_fmt yuv420p -acodec aac -metadata language=en -f flv 'rtmp://norsk:1935/acme/high'
    depends_on:
      - example
    networks:
      - norskNetwork
  # [End of source]
  prometheus:
    container_name: norsk-prometheus
    image: prom/prometheus:latest
    command:
      [
        "--config.file=/etc/prometheus.yaml",
        "--enable-feature=remote-write-receiver",
      ]
    networks:
      - norskNetwork
    ports:
      - "9090:9090"
    volumes:
      - ./docker-compose/metrics/docker-network/prometheus.yaml:/etc/prometheus.yaml
      - norsk-metrics-data:/prometheus

  loki:
    container_name: norsk-loki
    image: grafana/loki:latest
    command: "-config.file=/etc/loki/config.yaml -target=all"
    networks:
      - norskNetwork
    ports:
      - 3101:3101
      - 7946
      - 9095
    volumes:
      - ./docker-compose/metrics/loki-config.yaml:/etc/loki/config.yaml
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3101/ready || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  grafana:
    container_name: norsk-grafana
    image: grafana/grafana:latest
    networks:
      - norskNetwork
    ports:
      - "3100:3100"
    volumes:
      - ./docker-compose/metrics/docker-network/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./docker-compose/metrics/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./docker-compose/metrics/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SERVER_HTTP_PORT=3100
      - GF_INSTALL_PLIUGINS=grafana-clock-panel

volumes:
  norsk-metrics-data:
